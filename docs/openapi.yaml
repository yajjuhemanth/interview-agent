openapi: 3.0.3
info:
  title: Interview Question Generator API
  version: 1.0.0
  description: API for generating and storing interview questions
servers:
  - url: http://localhost:5000
paths:
  /generate:
    post:
      summary: Generate interview questions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [job_title, job_description]
              properties:
                job_title:
                  type: string
                job_description:
                  type: string
      responses:
        '200':
          description: Generated questions
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_title: { type: string }
                  job_description: { type: string }
                  questions:
                    type: array
                    items: { type: string }
                  source: { type: string }
  /save:
    post:
      summary: Save generated questions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [job_title, job_description, questions]
              properties:
                job_title: { type: string }
                job_description: { type: string }
                questions:
                  type: array
                  items: { type: string }
      responses:
        '201':
          description: Saved
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
                  id: { type: integer }
        '400':
          description: Invalid input
  /get:
  /agent:
    post:
      summary: Generate Q&A via AI and save
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [job_title, job_description]
              properties:
                job_title: { type: string }
                job_description: { type: string }
      responses:
        '201':
          description: Created with Q&A
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: { type: integer }
                  job_title: { type: string }
                  job_description: { type: string }
                  created_at: { type: string, format: date-time }
                  source: { type: string, enum: [gemini] }
                  questions:
                    type: array
                    items: { type: string }
                  qa:
                    type: array
                    items:
                      type: object
                      properties:
                        question: { type: string }
                        answer: { type: string }
        '503':
          description: AI unavailable
    get:
      summary: Fetch saved questions
      parameters:
        - in: query
          name: job_title
          schema: { type: string }
        - in: query
          name: limit
          schema: { type: integer, default: 50, maximum: 200 }
      responses:
        '200':
          description: List of saved questions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id: { type: integer }
                    job_title: { type: string }
                    job_description: { type: string }
                    questions:
                      type: array
                      items: { type: string }
                    created_at: { type: string, format: date-time }
